apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "atlassian-fisheye.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "atlassian-fisheye.name" . }}
    helm.sh/chart: {{ include "atlassian-fisheye.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "atlassian-fisheye.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "atlassian-fisheye.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: chown-data-volume
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["chown", "2:2", "-R", "/atlassian/data/fisheye"]
          volumeMounts:
          - name: data
            mountPath: /atlassian/data/fisheye
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: FECRU_CONFIGURE_ADMIN_PASSWORD
              value: {{ .Values.fisheye.adminpwd | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 3
          volumeMounts:
            - name: data
              mountPath: /atlassian/data/fisheye
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "atlassian-fisheye.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}